---
name: release
on:
  push:
    branches:
      main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # - name: Bump version and push tag
    #   id: tag_version
    #   uses: mathieudutour/github-tag-action@v6.0
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     create_annotated_tag: true

    # - run: git tag ${{ steps.tag_version.outputs.new_tag }}

    # This is here as a demonstration of the technique.
    # We obviously could use
    # steps.tag_version.outputs.new_version directly, but
    # I wanted to show how to manipulate a job's environment.
    # - name: Get tag/branch name
    #   id: vars
    #   run: echo ::set-output name=tag::${{steps.tag_version.outputs.new_version}}

    - name: Conventional Changelog Action
      id: changelog
      uses: TriPSs/conventional-changelog-action@v3.10.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up JDK 1.8
      uses: actions/setup-java@v2
      with:
        cache: maven
        distribution: zulu
        java-version: 1.8

    - name: Deploy to GitHub
      run: mvn --no-transfer-progress -Djgitver.use-version=${{ steps.vars.outputs.tag }} -DuseGitHubPackages=true clean deploy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create a GitHub release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "target/*.jar,LICENSE.txt,target/CHANGELOG.md"
        tag: ${{ steps.changelog.outputs.tag }}
        name: Release ${{ steps.changelog.outputs.version }}
        body: ${{ steps.changelog.outputs.clean_changelog }}
        token: ${{ secrets.GITHUB_TOKEN }}

#     - name: Notify slack
#       uses: rtCamp/action-slack-notify@v2
#       env:
#         SLACK_COLOR: "${{ job.status == 'success' && 'good' || 'danger' }}"
#         SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
#         SLACK_CHANNEL: build
#         SLACK_USERNAME: Bob the Builder
#         SLACK_ICON: 'https://www.clipartmax.com/png/middle/416-4161958_bob-the-builder-transparent-transparent-background-bob-the-builder-png.png'
#         SLACK_FOOTER: '${{ github.repository }}'
#         SLACK_TITLE: 'Above Property ci-demo Release'
#         SLACK_MESSAGE: ${{ steps.vars.outputs.tag }}
  notify:

      name: Notify on Slack
      runs-on: ubuntu-latest
      # Only run this workflow when "build" workflow succeeds
      needs: [build]

      # Only run this workflow if it target is main branch on pull_request event
      if: ${{ github.base_ref == 'main' && github.event_name == 'pull_request' }}

      steps:

        - uses: abinoda/slack-action@master
          env:
            # required
            SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          with:
            # custom message to send to slack
            args: '{\"channel\":\"${{ secrets.SLACK_PR_CHANNEL_ID }}\",\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Pull Request:* ${{ github.event.pull_request.title }}\"}},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Contributor :* ${{ github.event.pull_request.user.login }}\n*Request State:* ${{ github.event.pull_request.state }}\"}},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"<${{ github.event.pull_request.html_url }}|View Pull Request>\"}}]}'

          # Pick up events even if the job is success.
          if: success()
